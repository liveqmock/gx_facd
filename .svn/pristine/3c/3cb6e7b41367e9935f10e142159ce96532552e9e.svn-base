package com.wangzhixuan.controller;

import java.io.IOException;
import java.io.OutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.wangzhixuan.commons.base.BaseController;
import com.wangzhixuan.commons.result.PageInfo;
import com.wangzhixuan.model.SendFile;
import com.wangzhixuan.model.SendInfo;
import com.wangzhixuan.model.SendMessage;
import com.wangzhixuan.model.User;
import com.wangzhixuan.service.ISendFileService;
import com.wangzhixuan.service.ISendInfoService;
import com.wangzhixuan.service.ISendMessageService;
import com.wangzhixuan.service.IUserService;

/**
 * <p>
 * 报送信息 前端控制器
 * </p>
 * 
 * @author sunbq
 * @since 2017-05-23
 */
@Controller
@RequestMapping("/sendInfo")
public class SendInfoController extends BaseController {

	@Autowired
	private ISendInfoService sendInfoService;
	@Autowired
	private IUserService userservice;
	@Autowired
	private ISendFileService fileservice;
	@Autowired
	private ISendMessageService msgservice;
	
	

	@GetMapping("/manager")
	public String manager(Model model) {
		return "admin/sendInfo/sendInfoList";
	}

	@RequestMapping("/dataGrid")
	@ResponseBody
	public PageInfo dataGrid(/*SendInfoVo sendInfo, 
			Integer page, 
			Integer rows, 
			String sort, String order*/
			HttpServletRequest request,
			HttpServletResponse response,int stype,String export) {
		String page = request.getParameter("page");
		String rows = request.getParameter("rows");
		String sorts = request.getParameter("sort");
		String order = request.getParameter("order");
		
		//获取传入的参数
		String sendUserName = request.getParameter("sendUserName");
		String sendInfoName = request.getParameter("sendInfoName");
		String recvDateStart = request.getParameter("recvDateStart");
		String recvDateEnd = request.getParameter("recvDateEnd");
		String sendInfo = request.getParameter("sendInfo");
		String sendInfoType = request.getParameter("sendInfoType");
		String urgencyLevel = request.getParameter("urgencyLevel");
		String infoStatus = request.getParameter("infoStatus");
		
		SimpleDateFormat sdf =   new SimpleDateFormat( "yyyy-MM-dd HH:mm:ss" );
	
		PageInfo pageInfo= null;
		if(page!=null && rows!= null && sorts!= null && order != null){
			 pageInfo = new PageInfo(Integer.parseInt(page), 
					Integer.parseInt(rows), 
					sorts, 
					order);
		}
		
        Map<String, Object> condition = new HashMap<String, Object>();

        condition.put("stype", stype);
        //发送者的姓名
        if (null != sendUserName && !sendUserName.equals("")) {
            condition.put("sendUserName", sendUserName);
        }
        if (null != sendInfoName && !sendInfoName.equals("")) {	//标题
            condition.put("sendInfoName", sendInfoName);
        }
        //开始时间
        if (null != recvDateStart && !recvDateStart.equals("")) {
            try {
				condition.put("recvDateStart", sdf.parseObject(recvDateStart));
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }
        //结束时间
        if (null != recvDateEnd && !recvDateEnd.equals("")) {
            try {
				condition.put("recvDateEnd", sdf.parseObject(recvDateEnd));
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }
        //报送内容
        if ( null != sendInfo && !sendInfo.equals("") ){
        	condition.put("content", sendInfo);
        }
        //报送的类型
        if (null != sendInfoType && !sendInfoType.equals("") ){
        	condition.put("sendInfoType", Integer.parseInt(sendInfoType));
        }
        //紧急程度
        if (null != urgencyLevel && !urgencyLevel.equals("")){
        	condition.put("urgencyLevel", Integer.parseInt(urgencyLevel));
        }
        //公文状态
        if ( null != infoStatus && !infoStatus.equals("")){
        	condition.put("infoStatus", Integer.parseInt(infoStatus));
        }
        
        if(condition!=null){
        	 pageInfo.setCondition(condition);
        }
       
        sendInfoService.selectDataGrid(pageInfo);
        
        
        return pageInfo;
	}

	/**
	 * 编辑
	 * 
	 * @param model
	 * @param id
	 * @return
	 */
	@GetMapping("/verify")
	public String verifyPage(Model model, Long id) {
		try {
			SendInfo SendInfo = sendInfoService.selectById(id);
			if (SendInfo.getInfoStatus() == 0) {
				SendInfo send = new SendInfo();
				send.setId(id);
				send.setInfoStatus(1);
				sendInfoService.updateById(send);
				SendInfo.setInfoStatus(1);
			}
			EntityWrapper<SendFile> ew = new EntityWrapper<SendFile>();
			ew.eq("owenid", SendInfo.getId()); 
			ew.eq("msgid", 0);
			ew.eq("filesource", 2);
			List<SendFile> file = fileservice.selectfileList(ew);
			model.addAttribute("SendFile", file);
			User u = userservice.selectById(SendInfo.getSendId());
			SendInfo.setSendusername(u.getName());
			model.addAttribute("SendInfo", SendInfo);
			EntityWrapper<SendMessage> wrapper = new EntityWrapper<>();
			wrapper.eq("pid", id);
			wrapper.eq("type", 1);
			List<SendMessage> mlist = msgservice.selectList(wrapper);
			model.addAttribute("SendMsg",mlist);
			EntityWrapper<SendFile> ew1 = new EntityWrapper<SendFile>();
			ew1.eq("owenid", SendInfo.getId()); 
			ew1.ne("msgid", 0);
			ew1.eq("filesource", 2);
			 List<SendFile> file1 =  fileservice.selectList(ew1);
			
			model.addAttribute("SendFile1", file1);
			
			this.OpLog("进入审核信息页面", 0, getUserId());
		} catch (Exception e) {
			e.printStackTrace();
			this.ErrorLog(e, 0, getUserId());
		}
		return "admin/sendInfo/verify";
	}

	@GetMapping("/see")
	public String see(Model model, Long id) {
		SendInfo SendInfo = sendInfoService.selectById(id);
		EntityWrapper<SendFile> ew = new EntityWrapper<SendFile>();
		ew.eq("owenid", SendInfo.getId()); 
		ew.eq("msgid", 0);
		ew.eq("filesource", 2);
		List<SendFile> file = fileservice.selectfileList(ew);
		model.addAttribute("SendFile", file);
		User u = userservice.selectById(SendInfo.getSendId());
		SendInfo.setSendusername(u.getName());
		model.addAttribute("SendInfo", SendInfo);
		EntityWrapper<SendMessage> wrapper = new EntityWrapper<>();
		wrapper.eq("pid", id);
		wrapper.eq("type", 1);
		List<SendMessage> mlist = msgservice.selectList(wrapper);
		model.addAttribute("SendMsg",mlist);
		
		
				EntityWrapper<SendFile> ew1 = new EntityWrapper<SendFile>();
				ew1.eq("owenid", SendInfo.getId()); 
				ew1.ne("msgid", 0);
				ew1.eq("filesource", 2);
				 List<SendFile> file1 =  fileservice.selectList(ew1);
				
				model.addAttribute("SendFile1", file1);
			
	
		return "admin/sendInfo/see";
	}
	/**
	 * 变更状态
	 * 
	 * @param id
	 * @return
	 */
	@PostMapping("/change")
	@ResponseBody
	public Object change(Long id, Integer infoStatus,Integer sendInfoType) {
		SendInfo sendInfo = new SendInfo();
		sendInfo.setId(id);
		sendInfo.setVerifyId(getShiroUser().getId());
		sendInfo.setVerifyTime(new Date());
		sendInfo.setInfoStatus(infoStatus);
		sendInfo.setSendInfoType(sendInfoType);
		boolean b = sendInfoService.updateById(sendInfo);
		if (b) {
			this.OpLog("审核报送信息", 0, getUserId());
			return renderSuccess("审核操作成功！");
		} else {
			return renderError("审核操作失败！");
		}
	}

	/**
	 * 添加页面
	 * @return
	 */
	@GetMapping("/addPage")
	public String addPage() {
		return "admin/sendInfo/sendInfoAdd";
	}

	/**
	 * 添加
	 * @param 
	 * @return
	 */
	@PostMapping("/add")
	@ResponseBody
	public Object add(@Valid SendInfo sendInfo, BindingResult result) {
		if (result.hasErrors()) {
			return renderError(result);
		}
		sendInfo.setReceiveTime(new Date());
		sendInfo.setSendId(getShiroUser().getId());
		sendInfo.setInfoStatus(0);
		sendInfo.setDataStatus(1);
		boolean b = sendInfoService.insert(sendInfo);
		if (b) {
			return renderSuccess("添加成功！");
		} else {
			return renderError("添加失败！");
		}
	}
//	@GetMapping("/exportSendInFo")
//	public void exportSendInFo(HttpServletResponse response,HttpServletRequest request,String FileName){
//     try{
//   	 // 声明一个工作薄
//       HSSFWorkbook wb = new HSSFWorkbook();
//       //声明一个单子并命名
//       HSSFSheet sheet = wb.createSheet("信息报送");
//       //给单子名称一个长度
//       sheet.setDefaultColumnWidth((short)15);
//       // 生成一个样式  
//       HSSFCellStyle style = wb.createCellStyle();
//       //创建第一行（也可以称为表头）
//       HSSFRow row = sheet.createRow(0);
//       //样式字体居中
//       style.setAlignment(HSSFCellStyle.ALIGN_CENTER);
//     //设置自动换行; 
//       style.setWrapText(false);
//       //给表头第一行一次创建单元格
//       HSSFCell cell = row.createCell((short) 0);
//       cell.setCellValue("编号"); 
//       cell.setCellStyle(style);
//       cell = row.createCell( (short) 1);  
//               cell.setCellValue("报送人");  
//               cell.setCellStyle(style);  
//               cell = row.createCell((short) 2);  
//               cell.setCellValue("报送标题");  
//               cell.setCellStyle(style); 
//               cell = row.createCell( (short) 3);  
//               cell.setCellValue("报送时间"); 
//               cell.setCellStyle(style);
//               cell = row.createCell( (short) 4); 
//               cell.setCellValue("报送内容"); 
//               cell.setCellStyle(style);
//               cell = row.createCell( (short) 5); 
//               cell.setCellValue("报送信息类型"); 
//               cell.setCellStyle(style);
//               cell = row.createCell( (short) 6); 
//               cell.setCellValue("紧急程度"); 
//               cell.setCellStyle(style);
//               cell = row.createCell( (short) 7); 
//               cell.setCellValue("报送信息状态"); 
//               cell.setCellStyle(style);
//              SendInfoController s = new SendInfoController();
////              PageInfo PageInfo=  s.dataGrid(request, response, 1);
////             List<SendInfo> dataList = PageInfo.getRows();
//               //向单元格里填充数据
//               for (SendInfo object : dataList) {
//                   row.createCell(0).setCellValue(object.getId());
//                   row.createCell(1).setCellValue(object.getSendusername());
//                   row.createCell(2).setCellValue(object.getSendInfoName());
//                   row.createCell(3).setCellValue(object.getReceiveTime());
//                   row.createCell(4).setCellValue(object.getSendInfo());
//                   row.createCell(5).setCellValue(object.getSendInfoType());
//                   row.createCell(6).setCellValue(object.getUrgencyLevel());
//                   row.createCell(7).setCellValue(object.getInfoStatus());
//			}
//       if(wb !=null){
//           try
//           {
//               String fileName = "Excel-" + String.valueOf(System.currentTimeMillis()).substring(4, 13) + ".xls";
//               String headStr = "attachment; filename=\"" + fileName + "\"";
//               response.setContentType("APPLICATION/OCTET-STREAM");
//               response.setHeader("Content-Disposition", headStr);
//               OutputStream out = response.getOutputStream();
//               wb.write(out);
//           }
//           catch (IOException e)
//           {
//               e.printStackTrace();
//           }
//       
//       }
//       
//   }catch(Exception e){
//       e.printStackTrace();
//   }
//	}
}
