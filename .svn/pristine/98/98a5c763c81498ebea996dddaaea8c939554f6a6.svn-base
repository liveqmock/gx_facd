package com.wangzhixuan.service.impl;

import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import com.wangzhixuan.commons.result.PageInfo;
import com.wangzhixuan.mapper.AnswerMapper;
import com.wangzhixuan.mapper.SubjectMapper;
import com.wangzhixuan.model.Answer;
import com.wangzhixuan.model.Subject;
import com.wangzhixuan.service.ISubjectService;

/**
 * <p>
 * 题库表 服务实现类
 * </p>
 *
 * @author sunbq
 * @since 2017-08-22
 */
@Service
public class SubjectServiceImpl extends ServiceImpl<SubjectMapper, Subject> implements ISubjectService {

    @Autowired
    private SubjectMapper subjectMapper;

    @Override
    public List<Subject> selectByRandom(Map<String, Object> params) {
        return subjectMapper.selectByRandom(params);
    }

	@Autowired
	private AnswerMapper answerMapper;
	
	@Override
	public void selectDataGrid(PageInfo pageInfo) {
		Page<Map<String, Object>> page = new Page<Map<String, Object>>(pageInfo.getNowpage(), pageInfo.getSize());
        page.setOrderByField(pageInfo.getSort());
        page.setAsc(pageInfo.getOrder().equalsIgnoreCase("asc"));
        List<Map<String, Object>> list = subjectMapper.selectSubjectPage(page, pageInfo.getCondition());
        pageInfo.setRows(list);
        pageInfo.setTotal(page.getTotal());
	}

	@Override
	public boolean insertAnswer(Subject subject, Answer answer1,HttpServletRequest req) {
		String level =  req.getParameter("level");
		String title =  req.getParameter("title");
	
		String answerContent =  req.getParameter("answerContent");
		String isAnswer =  req.getParameter("isAnswer");
		String analysis =  req.getParameter("analysis");
		
		String answerContent2 =  req.getParameter("answerContent2");
		String isAnswer2 =  req.getParameter("isAnswer2");
		String analysis2 =  req.getParameter("analysis2");
		
		String answerContent3 =  req.getParameter("answerContent3");
		String isAnswer3 =  req.getParameter("isAnswer3");
		String analysis3 =  req.getParameter("analysis3");
		
		String answerContent4 =  req.getParameter("answerContent4");
		String isAnswer4 =  req.getParameter("isAnswer4");
		String analysis4 =  req.getParameter("analysis4");
		
		if(Integer.parseInt(isAnswer)==2&&Integer.parseInt(isAnswer2)==2&&Integer.parseInt(isAnswer3)==2&&Integer.parseInt(isAnswer4)==2){
			return false;
		}else if(Integer.parseInt(isAnswer)==0&&Integer.parseInt(isAnswer2)==0&&Integer.parseInt(isAnswer3)==0&&Integer.parseInt(isAnswer4)==0){
		    return false;	
		}else if(Integer.parseInt(isAnswer)==1&&Integer.parseInt(isAnswer2)==1&&Integer.parseInt(isAnswer3)==1&&Integer.parseInt(isAnswer4)==1){
		    return false;	
		}
		
		subject.setLevel(Integer.parseInt(level));
		subject.setTitle(title);
		subjectMapper.insertAndGetId(subject);
		
		
		answer1.setCreateTime(new Date());
		answer1.setSeq(1);
		answer1.setIsAnswer(Integer.parseInt(isAnswer));
		answer1.setSubjectId(subject.getId());
		answer1.setAnswerContent(answerContent);
		answer1.setAnalysis(analysis);
		
		Answer answer2 = new Answer();
		Answer answer3 = new Answer();
		Answer answer4 = new Answer();
		
		answer2.setCreateTime(new Date());
		answer2.setSeq(2);
		answer2.setIsAnswer(Integer.parseInt(isAnswer2));
		answer2.setSubjectId(subject.getId());
		answer2.setAnswerContent(answerContent2);
		answer2.setAnalysis(analysis2);
		
		answer3.setCreateTime(new Date());
		answer3.setSeq(3);
		answer3.setIsAnswer(Integer.parseInt(isAnswer3));
		answer3.setSubjectId(subject.getId());
		answer3.setAnswerContent(answerContent3);
		answer3.setAnalysis(analysis3);
		
		answer4.setCreateTime(new Date());
		answer4.setSeq(4);
		answer4.setIsAnswer(Integer.parseInt(isAnswer4));
		answer4.setSubjectId(subject.getId());
		answer4.setAnswerContent(answerContent4);
		answer4.setAnalysis(analysis4);
		
		answerMapper.insert(answer1);
		answerMapper.insert(answer2);
		answerMapper.insert(answer3);
		answerMapper.insert(answer4);
		return true;
	}

	@Override
	public boolean updataAnswer(Subject subject, HttpServletRequest req) {
	
		String level =  req.getParameter("level");
		String title =  req.getParameter("title");
	
		String id1= req.getParameter("id1");
		String answerContent =  req.getParameter("answerContent1");
		String isAnswer =  req.getParameter("isAnswer1");
		String analysis =  req.getParameter("analysis1");
		
		String id2= req.getParameter("id2");
		String answerContent2 =  req.getParameter("answerContent2");
		String isAnswer2 =  req.getParameter("isAnswer2");
		String analysis2 =  req.getParameter("analysis2");
		
		String id3= req.getParameter("id3");
		String answerContent3 =  req.getParameter("answerContent3");
		String isAnswer3 =  req.getParameter("isAnswer3");
		String analysis3 =  req.getParameter("analysis3");
		
		String id4= req.getParameter("id4");
		String answerContent4 =  req.getParameter("answerContent4");
		String isAnswer4 =  req.getParameter("isAnswer4");
		String analysis4 =  req.getParameter("analysis4");
		
		
		Subject s =subjectMapper.selectById(subject.getId());
		s.setTitle(title);
		s.setLevel(Integer.parseInt(level));
		subjectMapper.updateById(s);
		
		Answer a1 = answerMapper.selectById(id1);
		Answer a2 = answerMapper.selectById(id2);
		Answer a3 = answerMapper.selectById(id3);
		Answer a4 = answerMapper.selectById(id4);
		
		a1.setIsAnswer(Integer.parseInt(isAnswer));
		a1.setAnalysis(analysis);
		a1.setAnswerContent(answerContent);
		
		a2.setIsAnswer(Integer.parseInt(isAnswer2));
		a2.setAnalysis(analysis2);
		a2.setAnswerContent(answerContent2);
		
		a3.setIsAnswer(Integer.parseInt(isAnswer3));
		a3.setAnalysis(analysis3);
		a3.setAnswerContent(answerContent3);
		
		a4.setIsAnswer(Integer.parseInt(isAnswer4));
		a4.setAnalysis(analysis4);
		a4.setAnswerContent(answerContent4);
		
		answerMapper.updateById(a1);
		answerMapper.updateById(a2);
		answerMapper.updateById(a3);
		answerMapper.updateById(a4);
		return true;
	}
	
}
