package com.wangzhixuan.controller;

import javax.validation.Valid;

import java.util.List;
import java.util.Map;
import java.util.Date;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.wangzhixuan.commons.base.BaseController;
import com.wangzhixuan.commons.result.PageInfo;
import com.wangzhixuan.model.DataDictionary;
import com.wangzhixuan.model.DataType;
import com.wangzhixuan.service.IDataDictionaryService;
import com.wangzhixuan.service.IDataTypeService;
import com.wangzhixuan.service.IResourceService;

/**
 * <p>
 *   前端控制器
 * </p>
 * @author sunbq
 * @since 2017-09-12
 */
@Controller
@RequestMapping("/dataDictionary")
public class DataDictionaryController extends BaseController {
	
	@Autowired private IDataDictionaryService dataDictionaryService;
	@Autowired private IDataTypeService dataTypeService;
	
	@GetMapping("/manager")
	public String manager() {
		return "admin/dataDictionary/dataDictionaryList";
	}


	@PostMapping("/dataGrid")
	@ResponseBody
	public PageInfo dataGrid( Integer page, Integer rows, String sort,String order) {
		PageInfo pageInfo = new PageInfo(page, rows, sort, order);
		EntityWrapper<DataDictionary> ew = new EntityWrapper<DataDictionary>();
		ew.orderBy("seq");
		Page<DataDictionary> pages = getPage(pageInfo);
		pages = dataDictionaryService.selectPage(pages, ew);
		pageInfo.setRows(pages.getRecords());
		pageInfo.setTotal(pages.getTotal());
		return pageInfo;
	}
	
    @PostMapping("/treeGrid")
    @ResponseBody
    public Object treeGrid() {
        return dataDictionaryService.selectAll();
    }
	
	/**
	 * 添加页面
	 * @return
	 */
	@GetMapping("/addPage")
	public String addPage() {
		return "admin/dataDictionary/dataDictionaryAdd";
	}

	/**
	 * 添加
	 * @param 
	 * @return
	 */
	@PostMapping("/add")
	@ResponseBody
	public Object add(@Valid DataDictionary dataDictionary, BindingResult result) {
		if (result.hasErrors()) {
			return renderError(result);
		}
		dataDictionary.setStatus(0);
		boolean b = dataDictionaryService.insert(dataDictionary);
		if (b) {
			return renderSuccess("添加成功！");
		} else {
			return renderError("添加失败！");
		}
	}

	/**
	 * 删除
	 * @param id
	 * @return
	 */
	@PostMapping("/delete")
	@ResponseBody
	public Object delete(int id) {
		
		 dataDictionaryService.deleteById(id);
		 EntityWrapper<DataDictionary> ew = new EntityWrapper<DataDictionary>();
		 ew.eq("pid", id);
		 dataDictionaryService.delete(ew);
		return renderSuccess("删除成功！");
	}

	/**
	 * 编辑
	 * @param model
	 * @param id
	 * @return
	 */
	@GetMapping("/editPage")
	public String editPage(Model model, Long id) {
		DataDictionary dataDictionary = dataDictionaryService.selectById(id);
		dataDictionary.setText(dataDictionary.getName());
		model.addAttribute("dataDictionary", dataDictionary);
		return "admin/dataDictionary/dataDictionaryEdit";
	}

	/**
	 * 编辑
	 * @param 
	 * @return
	 */
	@PostMapping("/edit")
	@ResponseBody
	public Object edit(@Valid DataDictionary dataDictionary, BindingResult result) {
		if (result.hasErrors()) {
			return renderError(result);
		}
	
		boolean b = dataDictionaryService.updateById(dataDictionary);
		if (b) {
			return renderSuccess("编辑成功！");
		} else {
			return renderError("编辑失败！");
		}
	}
	
	/**
     * 查询所有的菜单
     */
    @RequestMapping("/allTree")
    @ResponseBody
    public Object allMenu() {
        return dataDictionaryService.selectAllMenu();
    }
	
}
